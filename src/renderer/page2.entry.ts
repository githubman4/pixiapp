
'use strict'

// フロントエンドライブラリの呼び出し

/// ////////////////////////////////////////////////////////////
// レンダラープロセスでやりとりするipcRenderer
// const { ipcRenderer } = require('electron');
import { ipcRenderer } from 'electron'
/// ////////////////////////////////////////////////////////////
// >>
import { IFelectronMessage, MSG } from './define'
// <<

/// /////// ページ読み込み後　//////////////////////////////
window.onload = () => {
  // ipc通信
  const send: IFelectronMessage = { error: null, message: null, anydata: null }
  ipcRenderer.send(MSG.MSG1, send)
}
/// ////////////////////////////////////////////////////////////

/// ////////////////////////////////////////////////////////////
// 受信('msg1-reply')
// 非同期通信の受信の応答処理（asynchronous-replyチャンネル）
ipcRenderer.on(MSG.RE_MSG1, (_EV: any, arg: IFelectronMessage) => {
  // "pong"が出力される
  // console.log(event);
  if (arg.message !== null) {
    const fff = document.getElementById('div-msg1') as HTMLDivElement
    fff.innerText = arg.message
  }
})
/// ////////////////////////////////////////////////////////////
/// ///////////////////////////////////////////////////////////
/// ////////////////////////////////////////////////////////////
/// ////////////////////////////////////////////////////////////
/// ////////////////////////////////////////////////////////////
/// ////////////////////////////////////////////////////////////
